/*
 * This file is part of VLE, a framework for multi-modeling,
 * simulation and analysis of complex dynamical systems.
 * http://www.vle-project.org
 *
 * Copyright (c) 2016 Agilack
 */
#include "exploitation.h"

Exploitation::Exploitation()
{
    mAteliers.clear();

    loadTest();
}

Exploitation::~Exploitation()
{
    while( ! mAteliers.isEmpty())
    {
        // Get the first list item
        Atelier *a = mAteliers.first();
        // Remove this item from list
        mAteliers.removeFirst();
        // Then, delete it
        delete a;
    }
}

int Exploitation::atelierCount(void)
{
    return mAteliers.count();
}

Atelier *Exploitation::atelierCreate(const QString &name)
{
    // Sanity check
    if (name.isEmpty())
        return NULL;

    // Allocate a new Atelier
    Atelier *a = new Atelier();
    a->setName(name);
    // Then, insert it into this exploitation
    mAteliers.push_back(a);

    return a;
}

Atelier *Exploitation::atelierGet(int index)
{
    if (index > (atelierCount() - 1))
        return NULL;

    return mAteliers.at(index);
}

void Exploitation::insertAtelier(Atelier *atelier)
{
    if (atelier == NULL)
        return;

    mAteliers.push_back(atelier);
}

void Exploitation::loadTest(void)
{
    Atelier *a1 = atelierCreate("Grande culture");
    a1->addParameter("Profondeur", 4);
    a1->addParameter("Surface",   42);

    Atelier *a2 = atelierCreate("Troupeau");
    a2->addParameter("Nombre", 0);

    Atelier *a3 = atelierCreate("Maraichage");
    a3->addParameter("Surface", 0);
}
